package com.lc.p2p.mapper.loan;

import com.lc.p2p.model.loan.LoanInfo;

import java.util.List;
import java.util.Map;

public interface LoanInfoMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int insert(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int insertSelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    LoanInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int updateByPrimaryKeySelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int updateByPrimaryKeyWithBLOBs(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Wed Nov 13 12:15:50 CST 2019
     */
    int updateByPrimaryKey(LoanInfo record);

    /**
     * 查询平台的历史人均收益率
     * @return
     */
    Double selectHistoryAverageRate();

    /**
     * 分页查询产品信息
     * @return
     */
    List<LoanInfo> selectLoanInfoByPage(Map<String, Object> paramMap);

    /**
     * 查询每类产品的总记录数
     * @param paramMap
     * @return
     */
    Integer selectPageTotal(Map<String, Object> paramMap);

    /**
     * 更新产品的剩余可投金额
     * @param paramMap
     * @return
     */
    int updateLeftProductMoney(Map<String, Object> paramMap);

    /**
     * 查询已满标的产品
     * @param productStatus
     * @return
     */
    List<LoanInfo> selectByProductStatus(Integer productStatus);
}